#include<bits/stdc++.h>
#include<limits.h>
using namespace std;

#define mod 1000000007
#define si(x) scanf("%d", &x)
#define sll(x) scanf("%lld", &x)
#define pi(x) printf("%d\n", x)
#define pll(x) printf("%lld\n", x)
#define ii pair<int, int>
#define vi vector<int>
#define vii vector<pair<int, int> >
#define adjList vector<vector<int> >
#define ll long long int
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define rep(i, z, q) for(i = z; i < q; i++)
#define rev(i, z, q) for(i = z; i > q; i--)

ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll a,ll b) {
  ll ans = 1;  
  while(b > 0){
    if(b & 1)
      ans = ((ans % mod) *(a % mod)) % mod;
    a=((a % mod)*(a % mod)) % mod;
    b >>= 1;
  }
  return ans;
}

int dp[100][100], arr[12], b;

int perm(int n, int k, int arr[]) {
  if(n == b) {
    int i,sum = 0;
    
    rep(i, 1, n+1) {
      arr[n] = i;
      sum += perm(n-1, k, arr);
    }
    
    return sum;
  }

  else if(dp[n][k] != -1)
    return dp[n][k];
  
  else if(n == 0 && k == 0) 
    return 1;

  else if(n == 0 && k != 0 || k < 0)
    return 0;
  
  else {
    int j, i, sum = 0, temp[b+1];

    memset(temp, 0, sizeof(temp));
    
    rep(i, n+1, b+1)
      temp[arr[i]] = 1;
    
    rep(i, 1, b+1) {
      if(!temp[i]) {
	int cn = 0;
	
	rep(j, n+1, b+1)
	  if(i > arr[j])
	    cn++;

	arr[n] = i;
	sum += perm(n-1, k-cn, arr);
      } 
    }

    return dp[n][k] = sum;
  }
}

int main() {

  int d, i, n, k;

  cin>>d;

  memset(dp, -1, sizeof(dp));
  
  while(d--) {
    memset(arr, 0, sizeof(arr));
    cin>>b>>k;
    cout<<perm(b, k, arr)<<endl;
  }
  
  return 0;
}

