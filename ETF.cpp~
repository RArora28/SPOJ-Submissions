/* Rishabh Arora
   IIIT-Hyderabad */

#include <bits/stdc++.h>
using namespace std;

typedef pair<int,int> II;
typedef vector<int> VI;
typedef vector<II> VII;
typedef long long int LL;
typedef unsigned long long int ULL;

#define MAXSIZE 100005
#define mod 1000000007
#define rep(i, a, b) for(i = a; i < b; i++)
#define rev(i, a, b) for(i = a; i > b; i--)
#define INF INT_MAX
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SET(a,b) memset(a, b, sizeof(a))
#define gc getchar_unlocked

//debugging statements
#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

int read_int() {
  char c = gc();
  while(c<'0' || c>'9') c = gc();
  int ret = 0;
  while(c>='0' && c<='9') {
    ret = 10 * ret + c - 48;
    c = gc();
  }
  return ret;
}

bool A[1000010];
int phi[1000010];
VI P;

void sieve(int n) { 

  int i, j;
  
  rep(i, 2, sqrt(n)+1) 
    for(j = 2; i*j <= n; j++) 
      A[i*j] = true;
  
  rep(i, 2, n+1)
    if(A[i] == false)
      P.PB(i);

  return;
}

int retAns(int n) { 
  
  int res = n;
  
  for(auto it : P) {
    if(it*it > n)
      break;
    
    if(n % it == 0) {
      res -= (res/it);
      while(n % it == 0) 
	n /= it;
    }
  }
  
  if(n > 1) 
    res -= (res/n);

  return res;
}

  
int main() {

  int i;
  
  sieve(1e6+5);
  
  rep(i, 1, 1e6+5)
    phi[i] = retAns(i);
  
  int t;
  
  t = read_int();

  while(t--) { 
    int x;
    x = read_int();

    cout<<phi[x]<<endl;
  }
    
  return 0;
}
